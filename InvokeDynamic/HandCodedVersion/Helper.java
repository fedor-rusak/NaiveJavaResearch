public class Helper {

 	private static String classFile = "cafebabe"+
 		"0000"	+	"0033"	+
 		"001d"	+
 		"0a"	+	"0006"	+	"000f"	+
 		"09"	+	"0010"	+	"0011"	+
 		"08"	+	"0012"	+
 		"0a"	+	"0013"	+	"0014"	+
 		"07"	+	"0015"	+
 		"07"	+	"0016"	+
 		"01"	+	"0006"	+	"3c696e69743e"	+
 		"01"	+	"0003"	+	"282956"	+
 		"01"	+	"0004"	+	"436f6465"	+
 		"01"	+	"000f"	+	"4c696e654e756d6265725461626c65"	+
 		"01"	+	"0004"	+	"6d61696e"	+
 		"01"	+	"0016"	+	"285b4c6a6176612f6c616e672f537472696e673b2956"	+
 		"01"	+	"000a"	+	"536f7572636546696c65"	+
 		"01"	+	"0009"	+	"546573742e6a617661"	+
 		"0c"	+	"0007"	+	"0008"	+
 		"07"	+	"0017"	+
 		"0c"	+	"0018"	+	"0019"	+
		"01"	+	"000c"	+	"48656c6c6f20776f726c6421"	+
		"07"	+	"001a"	+
		"0c"	+	"001b"	+	"001c"	+
		"01"	+	"0004"	+	"54657374"	+
		"01"	+	"0010"	+	"6a6176612f6c616e672f4f626a656374"	+
		"01"	+	"0010"	+	"6a6176612f6c616e672f53797374656d"	+
		"01"	+	"0003"	+	"6f7574"	+
		"01"	+	"0015"	+	"4c6a6176612f696f2f5072696e7453747265616d3b"	+
		"01"	+	"0013"	+	"6a6176612f696f2f5072696e7453747265616d"	+
		"01"	+	"0007"	+	"7072696e746c6e"	+
		"01"	+	"0015"	+	"284c6a6176612f6c616e672f537472696e673b2956"	+
		"0021"	+
		"0005"	+
		"0006"	+
		"0000"	+
		"0000"	+
		"0002"	+	//method count
		"0001"	+	"0007"	+	"0008"	+	"0001"	+ //clinit
		"0009"	+	"0000001d"	+	"0001"	+	"0001"	+
		"00000005"	+	"2ab70001b1"	+
		"0000"	+
		"0001"	+
		"000a"	+	"00000006"	+
		"0001"	+	"0000"	+	"0001"	+
		"0009"	+	"000b"	+	"000c"	+	"0001"	+
		"0009"	+	"00000025"	+	"0002"	+	"0001"	+
		"00000009"	+	"b200021203b60004b1"	+
		"0000"	+
		"0001"	+
		"000a"	+	"0000000a"	+
		"0002"	+	"0000"	+	"0003"	+	"0008"	+	"0004"	+
		"0001"	+
		"000d"	+	"00000002"	+	"000e";

	public static void main(String[] args) throws Exception {
		java.io.FileOutputStream out = new java.io.FileOutputStream("Test.class");
		out.write(hexStringToByteArray(classFile));
		out.close();
	}

	public static byte[] hexStringToByteArray(String input) {
		int len = input.length();
		byte[] data = new byte[len / 2];
		for (int i = 0; i < len; i += 2) {
			byte value = (byte) (Character.digit(input.charAt(i), 16) << 4);
				value += (byte) Character.digit(input.charAt(i+1), 16);
			data[i / 2] = value;
		}
		return data;
	}

}